launch :anycable, "./dist/anycable-go --graphql_path=/gql --jwt_id_key=secret --disable_disconnect"
wait_tcp 8080

# https://jwt.io/#debugger-io?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyLCJleHQiOiJ7XCJ1c2VyX2lkXCI6NDJ9In0.x03xoA3JVXDuGHo4-z2iK06yLAUIV_nSywBoMDhGA2U
token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyLCJleHQiOiJ7XCJ1c2VyX2lkXCI6NDJ9In0.x03xoA3JVXDuGHo4-z2iK06yLAUIV_nSywBoMDhGA2U"

scenario = [
  {
    send: {
      data: {
        type: "connection_init",
        payload: {
          jid: token
        }
      }
    }
  },
  {
    receive: {
      data: {
        type: "connection_ack"
      }
    }
  },
  {
    receive: {
      data: {
        type: "ping"
      }
    }
  }
]

TEST_COMMAND = <<~CMD
  bundle exec wsdirector ws://localhost:8080/gql --subprotocol=graphql-transport-ws -i #{scenario.to_json}
CMD

run :wsdirector, TEST_COMMAND

result = stdout(:wsdirector)

if result !~ /1 clients, 0 failures/
  fail "Unexpected scenario result:\n#{result}"
end
