launch :anycable,
  "./dist/anycable-go --secret=qwerty --jwt_param=token --enforce_jwt " \
  "--metrics_rotate_interval=1 --metrics_log --metrics_log_filter=rpc_call_total,rpc_error_total,rpc_retries_total"

wait_tcp 8080

payload = {ext: {}.to_json, exp: (Time.now.to_i + 60)}

token = ::JWT.encode(payload, "qwerty", "HS256")

scenario = [
  {
    client: {
      name: "header",
      connection_options: {
        query: {
          token: token
        }
      },
      actions: [
        {
          receive: {
            "data>": {
              type: "welcome"
            }
          }
        }
      ]
    }
  },
  {
    client: {
      name: "param",
      connection_options: {
        headers: {
          "x-token" => token
        }
      },
      actions: [
        {
          receive: {
            "data>": {
              type: "welcome"
            }
          }
        }
      ]
    }
  },
  {
    client: {
      name: "noauth",
      actions: [
        {
          receive: {
            "data>": {
              type: "disconnect",
              reason: "unauthorized"
            }
          }
        }
      ]
    }
  }
]

TEST_COMMAND = <<~CMD
  bundle exec wsdirector ws://localhost:8080/cable -i #{scenario.to_json}
CMD

run :wsdirector, TEST_COMMAND

result = stdout(:wsdirector)

unless result.include?("Group header: 1 clients, 0 failures") &&
  result.include?("Group param: 1 clients, 0 failures") &&
  result.include?("Group noauth: 1 clients, 0 failures")
  fail "Unexpected scenario result:\n#{result}"
end
