// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: action_cable.proto

package action_cable

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Type int32

const (
	Type_no_type              Type = 0
	Type_welcome              Type = 1
	Type_disconnect           Type = 2
	Type_ping                 Type = 3
	Type_confirm_subscription Type = 4
	Type_reject_subscription  Type = 5
	Type_confirm_history      Type = 6
	Type_reject_history       Type = 7
)

// Enum value maps for Type.
var (
	Type_name = map[int32]string{
		0: "no_type",
		1: "welcome",
		2: "disconnect",
		3: "ping",
		4: "confirm_subscription",
		5: "reject_subscription",
		6: "confirm_history",
		7: "reject_history",
	}
	Type_value = map[string]int32{
		"no_type":              0,
		"welcome":              1,
		"disconnect":           2,
		"ping":                 3,
		"confirm_subscription": 4,
		"reject_subscription":  5,
		"confirm_history":      6,
		"reject_history":       7,
	}
)

func (x Type) Enum() *Type {
	p := new(Type)
	*p = x
	return p
}

func (x Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Type) Descriptor() protoreflect.EnumDescriptor {
	return file_action_cable_proto_enumTypes[0].Descriptor()
}

func (Type) Type() protoreflect.EnumType {
	return &file_action_cable_proto_enumTypes[0]
}

func (x Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Type.Descriptor instead.
func (Type) EnumDescriptor() ([]byte, []int) {
	return file_action_cable_proto_rawDescGZIP(), []int{0}
}

type Command int32

const (
	Command_unknown_command Command = 0
	Command_subscribe       Command = 1
	Command_unsubscribe     Command = 2
	Command_message         Command = 3
	Command_history         Command = 4
	Command_pong            Command = 5
)

// Enum value maps for Command.
var (
	Command_name = map[int32]string{
		0: "unknown_command",
		1: "subscribe",
		2: "unsubscribe",
		3: "message",
		4: "history",
		5: "pong",
	}
	Command_value = map[string]int32{
		"unknown_command": 0,
		"subscribe":       1,
		"unsubscribe":     2,
		"message":         3,
		"history":         4,
		"pong":            5,
	}
)

func (x Command) Enum() *Command {
	p := new(Command)
	*p = x
	return p
}

func (x Command) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Command) Descriptor() protoreflect.EnumDescriptor {
	return file_action_cable_proto_enumTypes[1].Descriptor()
}

func (Command) Type() protoreflect.EnumType {
	return &file_action_cable_proto_enumTypes[1]
}

func (x Command) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Command.Descriptor instead.
func (Command) EnumDescriptor() ([]byte, []int) {
	return file_action_cable_proto_rawDescGZIP(), []int{1}
}

type StreamHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epoch  string `protobuf:"bytes,2,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Offset int64  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *StreamHistoryRequest) Reset() {
	*x = StreamHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_action_cable_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamHistoryRequest) ProtoMessage() {}

func (x *StreamHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_action_cable_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamHistoryRequest.ProtoReflect.Descriptor instead.
func (*StreamHistoryRequest) Descriptor() ([]byte, []int) {
	return file_action_cable_proto_rawDescGZIP(), []int{0}
}

func (x *StreamHistoryRequest) GetEpoch() string {
	if x != nil {
		return x.Epoch
	}
	return ""
}

func (x *StreamHistoryRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type HistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Since   int64                            `protobuf:"varint,1,opt,name=since,proto3" json:"since,omitempty"`
	Streams map[string]*StreamHistoryRequest `protobuf:"bytes,2,rep,name=streams,proto3" json:"streams,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *HistoryRequest) Reset() {
	*x = HistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_action_cable_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryRequest) ProtoMessage() {}

func (x *HistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_action_cable_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryRequest.ProtoReflect.Descriptor instead.
func (*HistoryRequest) Descriptor() ([]byte, []int) {
	return file_action_cable_proto_rawDescGZIP(), []int{1}
}

func (x *HistoryRequest) GetSince() int64 {
	if x != nil {
		return x.Since
	}
	return 0
}

func (x *HistoryRequest) GetStreams() map[string]*StreamHistoryRequest {
	if x != nil {
		return x.Streams
	}
	return nil
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       Type            `protobuf:"varint,1,opt,name=type,proto3,enum=action_cable.Type" json:"type,omitempty"`
	Command    Command         `protobuf:"varint,2,opt,name=command,proto3,enum=action_cable.Command" json:"command,omitempty"`
	Identifier string          `protobuf:"bytes,3,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Data       string          `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Message    []byte          `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	Reason     string          `protobuf:"bytes,6,opt,name=reason,proto3" json:"reason,omitempty"`
	Reconnect  bool            `protobuf:"varint,7,opt,name=reconnect,proto3" json:"reconnect,omitempty"`
	History    *HistoryRequest `protobuf:"bytes,8,opt,name=history,proto3" json:"history,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_action_cable_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_action_cable_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_action_cable_proto_rawDescGZIP(), []int{2}
}

func (x *Message) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_no_type
}

func (x *Message) GetCommand() Command {
	if x != nil {
		return x.Command
	}
	return Command_unknown_command
}

func (x *Message) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *Message) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *Message) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *Message) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *Message) GetReconnect() bool {
	if x != nil {
		return x.Reconnect
	}
	return false
}

func (x *Message) GetHistory() *HistoryRequest {
	if x != nil {
		return x.History
	}
	return nil
}

type Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        Type     `protobuf:"varint,1,opt,name=type,proto3,enum=action_cable.Type" json:"type,omitempty"`
	Identifier  string   `protobuf:"bytes,2,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Message     []byte   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Reason      string   `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	Reconnect   bool     `protobuf:"varint,5,opt,name=reconnect,proto3" json:"reconnect,omitempty"`
	StreamId    string   `protobuf:"bytes,6,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Epoch       string   `protobuf:"bytes,7,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Offset      int64    `protobuf:"varint,8,opt,name=offset,proto3" json:"offset,omitempty"`
	Sid         string   `protobuf:"bytes,9,opt,name=sid,proto3" json:"sid,omitempty"`
	Restored    bool     `protobuf:"varint,10,opt,name=restored,proto3" json:"restored,omitempty"`
	RestoredIds []string `protobuf:"bytes,11,rep,name=restored_ids,json=restoredIds,proto3" json:"restored_ids,omitempty"`
}

func (x *Reply) Reset() {
	*x = Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_action_cable_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reply) ProtoMessage() {}

func (x *Reply) ProtoReflect() protoreflect.Message {
	mi := &file_action_cable_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reply.ProtoReflect.Descriptor instead.
func (*Reply) Descriptor() ([]byte, []int) {
	return file_action_cable_proto_rawDescGZIP(), []int{3}
}

func (x *Reply) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_no_type
}

func (x *Reply) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *Reply) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *Reply) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *Reply) GetReconnect() bool {
	if x != nil {
		return x.Reconnect
	}
	return false
}

func (x *Reply) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *Reply) GetEpoch() string {
	if x != nil {
		return x.Epoch
	}
	return ""
}

func (x *Reply) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *Reply) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *Reply) GetRestored() bool {
	if x != nil {
		return x.Restored
	}
	return false
}

func (x *Reply) GetRestoredIds() []string {
	if x != nil {
		return x.RestoredIds
	}
	return nil
}

var File_action_cable_proto protoreflect.FileDescriptor

var file_action_cable_proto_rawDesc = []byte{
	0x0a, 0x12, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x62,
	0x6c, 0x65, 0x22, 0x44, 0x0a, 0x14, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70,
	0x6f, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0xcb, 0x01, 0x0a, 0x0e, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x69, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x69, 0x6e, 0x63,
	0x65, 0x12, 0x43, 0x0a, 0x07, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x62, 0x6c,
	0x65, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x1a, 0x5e, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x38, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x9e, 0x02, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x12, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x2e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12,
	0x36, 0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x2e,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07,
	0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0xbb, 0x02, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x26, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x12, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x72, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x64, 0x49, 0x64, 0x73, 0x2a, 0x96, 0x01, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b,
	0x0a, 0x07, 0x6e, 0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x77,
	0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67,
	0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13,
	0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x10, 0x06, 0x12, 0x12, 0x0a, 0x0e, 0x72, 0x65,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x10, 0x07, 0x2a, 0x62,
	0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x13, 0x0a, 0x0f, 0x75, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x10, 0x00, 0x12, 0x0d,
	0x0a, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x10, 0x01, 0x12, 0x0f, 0x0a,
	0x0b, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x10, 0x02, 0x12, 0x0b,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x68,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x10, 0x05, 0x42, 0x03, 0x5a, 0x01, 0x2e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_action_cable_proto_rawDescOnce sync.Once
	file_action_cable_proto_rawDescData = file_action_cable_proto_rawDesc
)

func file_action_cable_proto_rawDescGZIP() []byte {
	file_action_cable_proto_rawDescOnce.Do(func() {
		file_action_cable_proto_rawDescData = protoimpl.X.CompressGZIP(file_action_cable_proto_rawDescData)
	})
	return file_action_cable_proto_rawDescData
}

var file_action_cable_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_action_cable_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_action_cable_proto_goTypes = []interface{}{
	(Type)(0),                    // 0: action_cable.Type
	(Command)(0),                 // 1: action_cable.Command
	(*StreamHistoryRequest)(nil), // 2: action_cable.StreamHistoryRequest
	(*HistoryRequest)(nil),       // 3: action_cable.HistoryRequest
	(*Message)(nil),              // 4: action_cable.Message
	(*Reply)(nil),                // 5: action_cable.Reply
	nil,                          // 6: action_cable.HistoryRequest.StreamsEntry
}
var file_action_cable_proto_depIdxs = []int32{
	6, // 0: action_cable.HistoryRequest.streams:type_name -> action_cable.HistoryRequest.StreamsEntry
	0, // 1: action_cable.Message.type:type_name -> action_cable.Type
	1, // 2: action_cable.Message.command:type_name -> action_cable.Command
	3, // 3: action_cable.Message.history:type_name -> action_cable.HistoryRequest
	0, // 4: action_cable.Reply.type:type_name -> action_cable.Type
	2, // 5: action_cable.HistoryRequest.StreamsEntry.value:type_name -> action_cable.StreamHistoryRequest
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_action_cable_proto_init() }
func file_action_cable_proto_init() {
	if File_action_cable_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_action_cable_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_action_cable_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_action_cable_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_action_cable_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_action_cable_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_action_cable_proto_goTypes,
		DependencyIndexes: file_action_cable_proto_depIdxs,
		EnumInfos:         file_action_cable_proto_enumTypes,
		MessageInfos:      file_action_cable_proto_msgTypes,
	}.Build()
	File_action_cable_proto = out.File
	file_action_cable_proto_rawDesc = nil
	file_action_cable_proto_goTypes = nil
	file_action_cable_proto_depIdxs = nil
}
