// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	common "github.com/anycable/anycable-go/common"
	mock "github.com/stretchr/testify/mock"
)

// Subscriber is an autogenerated mock type for the Subscriber type
type Subscriber struct {
	mock.Mock
}

// Broadcast provides a mock function with given fields: msg
func (_m *Subscriber) Broadcast(msg *common.StreamMessage) {
	_m.Called(msg)
}

// BroadcastCommand provides a mock function with given fields: msg
func (_m *Subscriber) BroadcastCommand(msg *common.RemoteCommandMessage) {
	_m.Called(msg)
}

// Shutdown provides a mock function with given fields:
func (_m *Subscriber) Shutdown() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Start provides a mock function with given fields: done
func (_m *Subscriber) Start(done chan error) error {
	ret := _m.Called(done)

	var r0 error
	if rf, ok := ret.Get(0).(func(chan error) error); ok {
		r0 = rf(done)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Subscribe provides a mock function with given fields: stream
func (_m *Subscriber) Subscribe(stream string) {
	_m.Called(stream)
}

// Unsubscribe provides a mock function with given fields: stream
func (_m *Subscriber) Unsubscribe(stream string) {
	_m.Called(stream)
}

type mockConstructorTestingTNewSubscriber interface {
	mock.TestingT
	Cleanup(func())
}

// NewSubscriber creates a new instance of Subscriber. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSubscriber(t mockConstructorTestingTNewSubscriber) *Subscriber {
	mock := &Subscriber{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
