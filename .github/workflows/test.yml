name: Build

on:
  push:
    branches:
    - master
  pull_request:

jobs:
  rspec:
    name: RSpec - Ruby ${{ matrix.ruby }} - ${{ matrix.grpc_impl }} - Rack ${{ matrix.rack }}
    if: ${{ !contains(github.event.head_commit.message, '[ci skip tests]') }}
    runs-on: ubuntu-latest
    env:
      BUNDLE_JOBS: 4
      BUNDLE_RETRY: 3
      BUNDLE_FORCE_RUBY_PLATFORM: 1
      CI: true
      ANYCABLE_GRPC_IMPL: ${{ matrix.grpc_impl }}
      RACK_VERSION: ${{ matrix.rack }}
      COVERAGE: "true"
      COVERALLS_REPO_TOKEN: ${{ secrets.github_token }}
    strategy:
      fail-fast: false
      matrix:
        ruby: ["3.0", "3.1", "3.2", "3.3"]
        anyway_config: ["~> 2.2"]
        grpc_impl: ["grpc"]
        rack: ["~> 3.0"]
        include:
        - ruby: "3.1"
          grpc_impl: "grpc_kit"
        - ruby: "2.7"
          grpc_imlp: "grpc"
        - ruby: "3.3"
          rack: "~> 2.0"
        - ruby: "3.3"
          rack: "~> 3.0.0"
    steps:
    - run: |
        echo "Commit msg: ${{ github.event.head_commit.message }}"
    - uses: actions/checkout@v4
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}
        bundler-cache: true
    - name: Install Coveralls reporter
      run: |
        curl -L https://github.com/coverallsapp/coverage-reporter/releases/latest/download/coveralls-linux.tar.gz | tar zxv
    - name: Run RSpec
      run: |
        bundle exec rspec
    - name: Coveralls upload
      run: |
        ./coveralls -p --job-flag=ruby-${{ matrix.ruby }}-${{ matrix.grpc_impl }}-${{ matrix.rack }}
    - name: Run RSpec w/o gRPC
      env:
        GRPC: false
      run: |
        bundle exec rspec
    - name: Coveralls upload
      run: |
        ./coveralls -p --job-flag=ruby-${{ matrix.ruby }}-${{ matrix.grpc_impl }}-no-grpc-${{ matrix.rack }}
    - name: Run RSpec with RBS runtime tester
      if: matrix.ruby == '3.1'
      run: |
        bundle exec rbs collection install
        bundle exec rake spec:rbs -- --force-color
  coverage:
    needs: rspec
    runs-on: ubuntu-latest
    env:
      COVERALLS_REPO_TOKEN: ${{ secrets.github_token }}
    steps:
    - name: Install Coveralls reporter
      run: |
        curl -L https://github.com/coverallsapp/coverage-reporter/releases/latest/download/coveralls-linux.tar.gz | tar zxv
    - name: Finilize Coveralls build
      run: |
        ./coveralls -d
