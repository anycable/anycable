AnyCable-Go, The WebSocket server for https://anycable.io

USAGE
  anycable-go [options]

OPTIONS
  --host                                 Server host, default: localhost, env: ANYCABLE_HOST
  --port                                 Server port, default: 8080, env: ANYCABLE_PORT, PORT
  --max-conn                             Limit simultaneous server connections (0 â€“ without limit), default: 0, env: ANYCABLE_MAX_CONN
  --path                                 WebSocket endpoint path (you can specify multiple paths using space as separator), default: /cable, env: ANYCABLE_PATH
  --health-path                          HTTP health endpoint path, default: /health, env: ANYCABLE_HEALTH_PATH

  --ssl_cert                             SSL certificate path, env: ANYCABLE_SSL_CERT
  --ssl_key                              SSL private key path, env: ANYCABLE_SSL_KEY

  --broadcast_adapter                    Broadcasting adapter to use (redis or http), default: redis, env: ANYCABLE_BROADCAST_ADAPTER

  --redis_url                            Redis url, default: redis://localhost:6379/5, env: ANYCABLE_REDIS_URL, REDIS_URL
  --redis_channel                        Redis channel for broadcasts, default: __anycable__, env: ANYCABLE_REDIS_CHANNEL
  --redis_sentinels                      Comma separated list of sentinel hosts, format: 'hostname:port,..', env: ANYCABLE_REDIS_SENTINELS
  --redis_sentinel_discovery_interval    Interval to rediscover sentinels in seconds, default: 30, env: ANYCABLE_REDIS_SENTINEL_DISCOVERY_INTERVAL
  --redis_keeepalive_interval            Interval to periodically ping Redis to make sure it's alive, default: 30, env: ANYCABLE_REDIS_KEEPALIVE_INTERVAL

  --http_broadcast_port                  HTTP pub/sub server port, default: 8090, env: ANYCABLE_HTTP_BROADCAST_PORT
  --http_broadcast_path                  HTTP pub/sub endpoint path, default: /_broadcast, env: ANYCABLE_HTTP_BROADCAST_PATH
  --http_broadcast_secret                HTTP pub/sub authorization secret, default: "" (disabled), env: ANYCABLE_HTTP_BROADCAST_SECRET

  --nats_servers                         Comma separated list of NATS cluster servers, default: "nats://localhost:4222", env: ANYCABLE_NATS_SERVERS
  --nats_channel                         NATS channel for broadcasts, default: __anycable__, env: ANYCABLE_NATS_CHANNEL
  --nats_dont_randomize_servers          Pass this option to disable NATS servers randomization during (re-)connect, default: false, env: ANYCABLE_NATS_DONT_RANDOMIZE_SERVERS

  --rpc_host                             RPC service address, default: localhost:50051, env: ANYCABLE_RPC_HOST
  --rpc_concurrency                      Max number of concurrent RPC request; should be slightly less than the RPC server concurrency, default: 28, env: ANYCABLE_RPC_CONCURRENCY
  --rpc_enable_tls                       Enable client-side TLS with the RPC server, default: false, env: ANYCABLE_RPC_ENABLE_TLS
  --rpc_max_call_recv_size               Override default MaxCallRecvMsgSize for RPC client (bytes), default: none, env: ANYCABLE_RPC_MAX_CALL_RECV_SIZE
  --rpc_max_call_send_size               Override default MaxCallSendMsgSize for RPC client (bytes), default: none, env: ANYCABLE_RPC_MAX_CALL_SEND_SIZE
  --headers                              List of headers to proxy to RPC, default: cookie, env: ANYCABLE_HEADERS

  --disconnect_rate                      Max number of Disconnect calls per second, default: 100, env: ANYCABLE_DISCONNECT_RATE
  --disconnect_timeout                   Graceful shutdown timeouts (in seconds), default: 5, env: ANYCABLE_DISCONNECT_TIMEOUT
  --disable_disconnect                   Disable calling Disconnect callback, default: false, env: ANYCABLE_DISABLE_DISCONNECT

  --log_level                            Set logging level (debug/info/warn/error/fatal), default: info, env: ANYCABLE_LOG_LEVEL
  --log_format                           Set logging format (text, json), default: text, env: ANYCABLE_LOG_FORMAT
  --debug                                Enable debug mode (more verbose logging), default: false, env: ANYCABLE_DEBUG

  --metrics_log                          Enable metrics logging (with info level), default: false, env: ANYCABLE_METRICS_LOG
  --metrics_rotate_interval              Specify how often flush metrics to writers (logs, statsd) (in seconds), default: 15, env: ANYCABLE_METRICS_ROTATE_INTERVAL
  --metrics_log_interval                 DEPRECATED. Specify how often flush metrics logs (in seconds), default: 15, env: ANYCABLE_METRICS_LOG_INTERVAL
  --metrics_log_formatter                Specify the path to custom Ruby formatter script (only supported on MacOS and Linux), default: "" (none), env: ANYCABLE_METRICS_LOG_FORMATTER
  --metrics_http                         Enable HTTP metrics endpoint at the specified path, default: "" (disabled), env: ANYCABLE_METRICS_HTTP
  --metrics_host                         Server host for metrics endpoint, default: the same as for main server, env: ANYCABLE_METRICS_HOST
  --metrics_port                         Server port for metrics endpoint, default: the same as for main server, env: ANYCABLE_METRICS_PORT
  --metrics_tags                         Comma-separated list of default (global) tags to add to every metric, default: "", example: "env:prod,region:ru", env: ANYCABLE_METRICS_TAGS

  --statsd_host                          Server host for metrics sent to statsd server in the format <host>:<port>, default: "", env: ANYCABLE_STATSD_HOST
  --statsd_prefix                        Statsd metrics prefix, default: "anycable_go.", env: ANYCABLE_STATSD_PREFIX
  --statsd_max_packet_size               Statsd client maximum UDP packet size, default: 1400, env: ANYCABLE_STATSD_MAX_PACKET_SIZE
  --statsd_tags_format                   One of "datadog", "influxdb", or "graphite", default: "datadog", env: ANYCABLE_STATSD_TAGS_FORMAT

  --read_buffer_size                     WebSocket connection read buffer size, default: 1024, env: ANYCABLE_READ_BUFFER_SIZE
  --write_buffer_size                    WebSocket connection write buffer size, default: 1024, env: ANYCABLE_WRITE_BUFFER_SIZE
  --max_message_size                     Maximum size of a message in bytes, default: 65536, env: ANYCABLE_MAX_MESSAGE_SIZE
  --enable_ws_compression                Enable experimental WebSocket per message compression, default: false, env: ANYCABLE_ENABLE_WS_COMPRESSION
  --hub_gopool_size                      The size of the goroutines pool to broadcast messages, default: 16, env: ANYCABLE_HUB_GOPOOL_SIZE
  --allowed_origins                      Accept requests only from specified origins, e.g., "www.example.com,*example.io". No check is performed if empty, default: "", env: ANYCABLE_ALLOWED_ORIGINS

  --netpoll_enabled                      Whether to use net polling (epoll, kqueue) to read data or not, default: true, env: ANYCABLE_NETPOLL_ENABLED
  --read_gopool_size                     The size of the goroutine pool to read client messages, default: 1024, env: ANYCABLE_READ_GOPOOL_SIZE
  --write_gopool_size                    The size of the goroutine pool to write client messages, default: 1024, env: ANYCABLE_WRITE_GOPOOL_SIZE

  --ping_interval                        Action Cable ping interval (in seconds), default: 3, env: ANYCABLE_PING_INTERVAL
  --ping_timestamp_precision             Precision for timestamps in ping messages (s, ms, ns), default: s, env: ANYCABLE_PING_TIMESTAMP_PRECISION
  --stats_refresh_interval               How often to refresh the server stats (in seconds), default: 5, env: ANYCABLE_STATS_REFRESH_INTERVAL

  --jwt_id_key                           The encryption key used to verify JWT tokens, default: "" (disabled), env: ANYCABLE_JWT_ID_KEY
  --jwt_id_param                         The name of a query string param or an HTTP header carrying a token, default: "jid" ("X-JID"), env: ANYCABLE_JWT_ID_PARAM
  --jwt_id_enforce                       Whether to enforce token presence for all connections, default: false, env: ANYCABLE_JWT_ID_ENFORCE

  --turbo_rails_key                      Enable Turbo Streams fastlane with the specified signing key, default: "" (disabled), env: ANYCABLE_TURBO_RAILS_KEY
  --cable_ready_key                      Enable CableReady fastlane with the specified signing key, default: "" (disabled), env: ANYCABLE_CABLE_READY_KEY

  --graphql_path                         Enable GraphQL proxy and mount at the specified path, default: "" (disabled), env: ANYCABLE_GRAPHQL_PATH
  --graphql_channel                      GraphQL Ruby channel class name, default: "GraphqlChannel", env: ANYCABLE_GRAPHQL_CHANNEL
  --graphql_action                       GraphQL Ruby channel action name, default: "execute", env: ANYCABLE_GRAPHQL_ACTION
  --graphql_idle_timeout                 Defines for how long to wait for a client to send "connection_init" message (in seconds), default: 2, env: ANYCABLE_GRAPHQL_IDLE_TIMEOUT

  -h                       This help screen
  -v                       Show version
