// Code generated by mockery v2.50.0. DO NOT EDIT.

package broker

import (
	common "github.com/anycable/anycable-go/common"
	mock "github.com/stretchr/testify/mock"
)

// MockPresenter is an autogenerated mock type for the Presenter type
type MockPresenter struct {
	mock.Mock
}

// HandleJoin provides a mock function with given fields: stream, msg
func (_m *MockPresenter) HandleJoin(stream string, msg *common.PresenceEvent) {
	_m.Called(stream, msg)
}

// HandleLeave provides a mock function with given fields: stream, msg
func (_m *MockPresenter) HandleLeave(stream string, msg *common.PresenceEvent) {
	_m.Called(stream, msg)
}

// NewMockPresenter creates a new instance of MockPresenter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockPresenter(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockPresenter {
	mock := &MockPresenter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
