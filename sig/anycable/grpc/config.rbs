module AnyCable
  module GRPC
    interface _Config
      def rpc_host: () -> String
      def rpc_host=: (String) -> void
      def rpc_pool_size: () -> Integer
      def rpc_pool_size=: (Integer) -> void
      def rpc_max_waiting_requests: () -> Integer
      def rpc_max_waiting_requests=: (Integer) -> void
      def rpc_poll_period: () -> Numeric
      def rpc_poll_period=: (Numeric) -> void
      def rpc_pool_keep_alive: () -> Numeric
      def rpc_pool_keep_alive=: (Numeric) -> void
      def rpc_server_args: () -> Hash[Symbol | String, untyped]?
      def rpc_server_args=: (Hash[Symbol | String, untyped]) -> void
      def log_grpc: () -> bool
      def log_grpc=: (bool) -> void
      def log_grpc?: () -> bool
    end

    module Config : AnyCable::_Config
      include _Config

      def to_grpc_params: () -> {
        pool_size: Integer,
        max_waiting_requests: Integer,
        poll_period: Numeric,
        pool_keep_alive: Numeric,
        server_args: Hash[String, untyped]
      }

      def normalized_grpc_server_args: () -> Hash[String, untyped]
    end
  end
end

module AnyCable
  class Config
    include GRPC::Config
  end
end
